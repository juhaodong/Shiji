[versions]


calfPermissions = "0.7.0"
coilCompose = "3.0.0-rc01"
coilNetworkOkhttp = "3.0.0-rc01"
filekitCore = "0.8.7"
firebaseMessaging = "2.1.0"
humanReadable = "1.10.0"
kotlin = "2.1.0"
activityCompose = "1.9.3"
appcompat = "1.7.0"
bignum = "0.3.10"
compose-plugin = "1.7.3"

coreKtx = "1.15.0"
insetsx = "0.1.0-alpha10"
kmpalette = "2.0.2"
kotlinInjectRuntime = "0.7.2"
kotlinx_datetime_ext = "1.3.1"
kotlinxCoroutinesCore = "1.10.1"
kotlinxCoroutinesSwing = "1.10.1"
ktorVersion = "3.0.1"
ktorfitVersion = "2.2.0"
kotlinxDatetime = "0.6.1"
lifecycleViewmodelCompose = "2.8.2"
material3WindowSizeClassMultiplatform = "0.5.0"
materialKolor = "2.0.0"
multiplatformLocale = "0.4.0"
multiplatformSettingsNoArg = "1.0.0"
napierVersion = "2.6.1"
navigationCompose = "2.8.0-alpha10"
profileinstaller = "1.4.1"
sain = "2.0.6"
uiTextGoogleFonts = "1.7.6"
firebaseAuth = "2.1.0"
firebaseCommon = "2.1.0"
firebaseBom = "33.7.0"
firebaseCommonVersion = "21.0.0"
gradlePlugins-crashlytics = "3.0.2"
gradlePlugins-google-services = "4.4.2"
firebase-gitlive-sdk = "1.12.0"

peekaboo = "0.5.2"


[libraries]
activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }
androidx-profileinstaller = { module = "androidx.profileinstaller:profileinstaller", version.ref = "profileinstaller" }
appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
bignum = { module = "com.ionspin.kotlin:bignum", version.ref = "bignum" }
calf-permissions = { module = "com.mohamedrejeb.calf:calf-permissions", version.ref = "calfPermissions" }
coil-network-okhttp = { module = "io.coil-kt.coil3:coil-network-okhttp", version.ref = "coilNetworkOkhttp" }
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coilCompose" }
core-ktx = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }


filekit-compose = { module = "io.github.vinceglb:filekit-compose", version.ref = "filekitCore" }
filekit-core = { module = "io.github.vinceglb:filekit-core", version.ref = "filekitCore" }
firebase-analytics = { module = "dev.gitlive:firebase-analytics", version.ref = "firebaseAuth" }
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBom" }
firebase-common = { module = "dev.gitlive:firebase-common", version.ref = "firebaseCommon" }
firebase-messaging = { module = "com.google.firebase:firebase-messaging" }
gitlive-firebase-auth = { module = "dev.gitlive:firebase-auth", version.ref = "firebaseAuth" }
gitlive-firebase-messaging = { module = "dev.gitlive:firebase-messaging", version.ref = "firebaseMessaging" }
google-firebase-analytics = { module = "com.google.firebase:firebase-analytics" }
google-firebase-common = { module = "com.google.firebase:firebase-common", version.ref = "firebaseCommonVersion" }
gitlive-firebase-kotlin-crashlytics = { module = "dev.gitlive:firebase-crashlytics", version.ref = "firebase-gitlive-sdk" }


human-readable = { module = "nl.jacobras:Human-Readable", version.ref = "humanReadable" }
insetsx = { module = "com.moriatsushi.insetsx:insetsx", version.ref = "insetsx" }

kmpalette-core = { module = "com.kmpalette:kmpalette-core", version.ref = "kmpalette" }
# Optional source libraries
kmpalette-extensions-network = { module = "com.kmpalette:extensions-network", version.ref = "kmpalette" }
kotlin-inject-runtime = { module = "me.tatarka.inject:kotlin-inject-runtime-kmp", version.ref = "kotlinInjectRuntime" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutinesCore" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinxCoroutinesSwing" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }
kotlinx_datetime_ext = { module = "com.raedghazal:kotlinx_datetime_ext", version.ref = "kotlinx_datetime_ext" }
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktorVersion" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktorVersion" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktorVersion" }
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktorVersion" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktorVersion" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktorVersion" }
ktorfit-lib = { module = "de.jensklingenberg.ktorfit:ktorfit-lib", version.ref = "ktorfitVersion" }
lifecycle-viewmodel-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycleViewmodelCompose" }
material-kolor = { module = "com.materialkolor:material-kolor", version.ref = "materialKolor" }
m3winsize = { module = "dev.chrisbanes.material3:material3-window-size-class-multiplatform", version.ref = "material3WindowSizeClassMultiplatform" }
multiplatform-locale = { module = "com.vanniktech:multiplatform-locale", version.ref = "multiplatformLocale" }
multiplatform-settings-no-arg = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "multiplatformSettingsNoArg" }
napier = { module = "io.github.aakira:napier", version.ref = "napierVersion" }
navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
sain = { module = "io.github.joelkanyi:sain", version.ref = "sain" }
ui-text-google-fonts = { module = "androidx.compose.ui:ui-text-google-fonts", version.ref = "uiTextGoogleFonts" }


peekaboo-ui = { module = "io.github.onseok:peekaboo-ui", version.ref = "peekaboo" }
peekaboo-image-picker = { module = "io.github.onseok:peekaboo-image-picker", version.ref = "peekaboo" }



[plugins]
# ...
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
google-services = { id = "com.google.gms.google-services", version.ref = "gradlePlugins-google-services" }
crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "gradlePlugins-crashlytics" }


